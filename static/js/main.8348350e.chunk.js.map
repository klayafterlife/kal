{"version":3,"sources":["../node_modules/caver-js/packages sync /^/.*/src/index/.js$","constant.js","components/Modal/SoulModal.js","components/Modal/NFTModal.js","components/Footer/Footer.js","views/examples/Home.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","KAL_ADDR","NFT_LIST","symbol","addr","imgUrl","KAL_ABI","NFT_ABI","SoulModal","modal","close","useState","selectedTab","setSelectedTab","selectedId","setSelectedId","idList","setIdList","isApprove","setIsApprove","bal","setBal","useEffect","selectTab","tabClass","idx","defaultClass","a","window","klaytn","enable","caver","Caver","klay","Contract","methods","dashboard","call","from","selectedAddress","_","result","itemStyle","approval","myContract","setApprovalForAll","send","gas","err","tx","ToastsStore","info","error","getSoul","success","Modal","isOpen","modalClassName","className","alt","width","src","type","onClick","ModalBody","nft","Button","Row","Col","lg","md","style","border","length","ModalFooter","color","disabled","list","setList","select","setSelect","addList","cntList","resList","forEach","push","console","log","getNFT","getNft","Footer","marginTop","Container","display","alignItems","href","target","Home","soulModal","setSoulModal","nftModal","setNFTModal","React","document","body","classList","add","on","open","isKaikas","networkVersion","then","errMsg","msg","Card","CardBody","store","position","ToastsContainerPosition","BOTTOM_CENTER","lightBackground","ReactDOM","render","basename","process","path","props","getElementById"],"mappings":"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","file":"static/js/main.8348350e.chunk.js","sourcesContent":["var map = {\n\t\"./caver-abi/src/index.js\": 89,\n\t\"./caver-account/src/index.js\": 50,\n\t\"./caver-contract/src/index.js\": 62,\n\t\"./caver-core-helpers/src/index.js\": 23,\n\t\"./caver-core-method/src/index.js\": 47,\n\t\"./caver-core-requestmanager/caver-providers-http/src/index.js\": 229,\n\t\"./caver-core-requestmanager/caver-providers-ipc/src/index.js\": 233,\n\t\"./caver-core-requestmanager/caver-providers-ws/src/index.js\": 227,\n\t\"./caver-core-requestmanager/src/index.js\": 224,\n\t\"./caver-core-subscriptions/src/index.js\": 86,\n\t\"./caver-core/src/index.js\": 35,\n\t\"./caver-ipfs/src/index.js\": 251,\n\t\"./caver-kct/src/index.js\": 263,\n\t\"./caver-klay/caver-klay-accounts/src/index.js\": 266,\n\t\"./caver-klay/caver-klay-personal/src/index.js\": 269,\n\t\"./caver-klay/src/index.js\": 270,\n\t\"./caver-middleware/src/index.js\": 138,\n\t\"./caver-net/src/index.js\": 154,\n\t\"./caver-rpc/src/index.js\": 271,\n\t\"./caver-rtm/src/index.js\": 88,\n\t\"./caver-transaction/src/index.js\": 272,\n\t\"./caver-utils/iban/src/index.js\": 219,\n\t\"./caver-utils/promievent/src/index.js\": 218,\n\t\"./caver-utils/src/index.js\": 3,\n\t\"./caver-validator/src/index.js\": 155,\n\t\"./caver-wallet/src/index.js\": 148\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 296;","export const KAL_ADDR = '0x11CBdeA3f1c0e39f438E93a4C462502628c1FCfB';\r\n\r\nexport const NFT_LIST = [\r\n  { \r\n    symbol: 'KIDS', \r\n    addr: '0x0a412f094C15010bbd413BE0fC07b8da26b0B05F', \r\n    imgUrl: '/img/kids.png' \r\n  }\r\n];\r\n\r\nexport const KAL_ABI = [\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"addSupport\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": true,\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"addr\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"dashboard\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"addr\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getNft\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"addr\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getNftId\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"addr\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getSoul\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];\r\n\r\nexport const NFT_ABI = [\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"operator\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"_approved\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"name\": \"setApprovalForAll\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  }\r\n];","import React, { useState, useEffect } from \"react\";\r\nimport Caver from 'caver-js';\r\nimport { Button, Modal, ModalBody, ModalFooter, Row, Col } from \"reactstrap\";\r\nimport { ToastsStore } from 'react-toasts';\r\nimport { KAL_ADDR, NFT_LIST, KAL_ABI, NFT_ABI } from '../../constant.js';\r\n\r\nexport default function SoulModal({ modal, close }) {\r\n  const [selectedTab, setSelectedTab] = useState(-1);\r\n  const [selectedId, setSelectedId] = useState(-1);\r\n  const [idList, setIdList] = useState([]);\r\n  const [isApprove, setIsApprove] = useState(false);\r\n  const [bal, setBal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if(modal) {\r\n      selectTab(0);\r\n    } else {\r\n      selectTab(-1);\r\n    }\r\n  }, [modal]);\r\n  \r\n\r\n  const tabClass = (idx) => {\r\n    const defaultClass = 'btn-simple btn-sm';\r\n    if(selectedTab === idx) return defaultClass + ' btn-neutral';\r\n    return defaultClass;\r\n  }\r\n\r\n  const selectTab = async (idx) => {\r\n    if(selectedTab === idx) return;\r\n\r\n    setSelectedId(-1);\r\n    setIsApprove(false);\r\n    setIdList([]);\r\n\r\n    if(idx === -1) return setSelectedTab(idx);\r\n\r\n    const { klaytn } = window;\r\n    await klaytn.enable();\r\n\r\n    const caver = new Caver(klaytn);\r\n    const myContract = new caver.klay.Contract(\r\n      KAL_ABI,\r\n      KAL_ADDR\r\n    );\r\n\r\n    myContract.methods.dashboard(NFT_LIST[idx].addr).call({\r\n      from : klaytn.selectedAddress\r\n    }, (_, result) => {\r\n      setIsApprove(result[2]);\r\n      setIdList(result[3]);\r\n      setBal(result[5]);\r\n    });\r\n\r\n    setSelectedTab(idx);\r\n  }\r\n\r\n  const itemStyle = (id) => {\r\n    if(id === selectedId) return '1px solid';\r\n    return '';\r\n  }\r\n\r\n  const approval = async () => {\r\n    const { klaytn } = window;\r\n    await klaytn.enable();\r\n\r\n    const caver = new Caver(klaytn);\r\n    const myContract = new caver.klay.Contract(\r\n      NFT_ABI,\r\n      NFT_LIST[selectedTab].addr\r\n    );\r\n\r\n    try {\r\n      myContract.methods.setApprovalForAll(KAL_ADDR, true)\r\n      .send({\r\n          from: klaytn.selectedAddress,\r\n          gas: 800000\r\n      }, function(err, tx) {\r\n        if(!err && tx) {\r\n          ToastsStore.info('승인되었습니다.');\r\n          setIsApprove(true);\r\n        } else {\r\n          ToastsStore.error('다시 시도해주세요');\r\n          close();    \r\n        }\r\n      });\r\n    } catch {\r\n      ToastsStore.error('다시 시도해주세요');\r\n      close();\r\n    }\r\n  }\r\n\r\n  const getSoul = async () => {\r\n    const { klaytn } = window;\r\n    await klaytn.enable();\r\n\r\n    const caver = new Caver(klaytn);\r\n    const myContract = new caver.klay.Contract(\r\n      KAL_ABI,\r\n      KAL_ADDR\r\n    );\r\n\r\n    try {\r\n      myContract.methods.getSoul(NFT_LIST[selectedTab].addr, selectedId)\r\n      .send({\r\n          from: klaytn.selectedAddress,\r\n          gas: 800000\r\n      }, function(err, tx) {\r\n        if(!err && tx) {\r\n          ToastsStore.success('영혼을 획득했습니다!');\r\n          close();\r\n        } else {\r\n          ToastsStore.error('다시 시도해주세요');\r\n          close();    \r\n        }\r\n      });\r\n    } catch {\r\n      ToastsStore.error('다시 시도해주세요');\r\n      close();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={modal} modalClassName=\"modal-black\">\r\n      <div className=\"modal-header\">\r\n        <p className=\"ml-3\">\r\n          { bal }\r\n\r\n          <img\r\n            alt=\"soul\"\r\n            className=\"img-fluid ml-1\"\r\n            width={16}\r\n            src=\"/img/1.png\"\r\n          />\r\n        </p>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-hidden=\"true\"\r\n          onClick={() => close()}\r\n        >\r\n          <i className=\"tim-icons icon-simple-remove\" />\r\n        </button>\r\n      </div>\r\n\r\n      <ModalBody className=\"mb-5\">\r\n        {\r\n          NFT_LIST.map((nft, idx) => (\r\n            <Button\r\n              key={idx}\r\n              className={tabClass(idx)}\r\n              onClick={() => selectTab(idx)}\r\n            >\r\n              {nft.symbol}\r\n            </Button>\r\n          ))\r\n        }\r\n\r\n        <Row className=\"mt-5\">\r\n          { selectedTab > -1 && isApprove &&\r\n            idList.map(id => (\r\n              <Col \r\n                lg=\"4\"\r\n                md=\"4\"\r\n                key={id}\r\n                onClick={() => setSelectedId(id)}\r\n                style={{ border: itemStyle(id) }}\r\n              >\r\n                <img\r\n                  alt=\"soul\"\r\n                  className=\"img-center img-fluid\"\r\n                  src={NFT_LIST[selectedTab].imgUrl}\r\n                />\r\n                <p className=\"text-center\">{id}</p>\r\n              </Col>\r\n            ))\r\n          }\r\n\r\n          { selectedTab > -1 && isApprove && idList.length === 0 &&\r\n            <Col lg=\"12\" md=\"12\" className=\"ml-1 mr-3\">\r\n              <p>\r\n                NFT가 존재하지 않습니다.\r\n              </p>\r\n            </Col>\r\n          }\r\n\r\n          { selectedTab > -1 && !isApprove &&\r\n            <Row className=\"ml-1 mr-3\">\r\n              <Col lg=\"12\" md=\"12\">\r\n                <p>\r\n                  {\r\n                    idList.length === 0 ? \r\n                    'NFT가 존재하지 않습니다.' : \r\n                    '영혼 추출을 위해서는 해당 NFT 전송 권한에 대한 승인 필요합니다.' \r\n                  }\r\n                </p>\r\n              </Col>\r\n\r\n              {\r\n                idList.length > 0 &&\r\n                <Col lg=\"12\" md=\"12\">\r\n                  <Button\r\n                    className=\"btn-simple btn-sm btn-success float-right mt-3 mr-3\"\r\n                    onClick={() => approval()}\r\n                  >\r\n                    승인하기\r\n                  </Button>\r\n                </Col>\r\n              }\r\n            </Row>\r\n          }\r\n        </Row>\r\n      </ModalBody>\r\n\r\n      <ModalFooter>\r\n        <Button onClick={() => close()}>\r\n          닫기\r\n        </Button>\r\n\r\n        <Button\r\n          color=\"info\"\r\n          onClick={() => getSoul()}\r\n          disabled={idList.length === 0 || !isApprove || selectedId < 0}\r\n        >\r\n          추출\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Caver from 'caver-js';\r\nimport { Button, Modal, ModalBody, ModalFooter, Row, Col } from \"reactstrap\";\r\nimport { ToastsStore } from 'react-toasts';\r\nimport { KAL_ADDR, NFT_LIST, KAL_ABI } from '../../constant.js';\r\n\r\nexport default function SoulModal({ modal, close }) {\r\n  const [list, setList] = useState([]);\r\n  const [select, setSelect] = useState(-1);\r\n  const [bal, setBal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if(modal) {\r\n      (async() => {\r\n        const { klaytn } = window;\r\n        await klaytn.enable();\r\n  \r\n        const caver = new Caver(klaytn);\r\n        const myContract = new caver.klay.Contract(\r\n          KAL_ABI,\r\n          KAL_ADDR\r\n        );\r\n  \r\n        myContract.methods.dashboard(NFT_LIST[0].addr).call({\r\n          from : klaytn.selectedAddress\r\n        }, (_, result) => {\r\n          const addList = result[0];\r\n          const cntList = result[1];\r\n          const resList = [];\r\n\r\n          addList.forEach((addr, idx) => {\r\n            if(cntList[idx] > 0) {\r\n              NFT_LIST.forEach(nft => {\r\n                if(nft.addr === addr) resList.push(nft);\r\n              })\r\n            }\r\n          });\r\n\r\n          setList(resList);\r\n          setBal(result[5]);\r\n          console.log(result[5])\r\n\r\n          if(resList.length === 0) {\r\n            ToastsStore.error('교환할 수 있는 NFT가 없습니다.');\r\n            close();\r\n          }\r\n        });\r\n      })();\r\n\r\n    } else {\r\n      setSelect(-1);\r\n      setList([]);\r\n    }\r\n  }, [modal]);\r\n\r\n  const itemStyle = (idx) => {\r\n    if(idx === select) return '1px solid';\r\n    return '';\r\n  }\r\n\r\n  const getNFT = async () => {\r\n    const { klaytn } = window;\r\n    await klaytn.enable();\r\n\r\n    const caver = new Caver(klaytn);\r\n    const myContract = new caver.klay.Contract(\r\n      KAL_ABI,\r\n      KAL_ADDR\r\n    );\r\n    \r\n    try {\r\n      myContract.methods.getNft(list[select].addr)\r\n      .send({\r\n          from: klaytn.selectedAddress,\r\n          gas: 800000\r\n      }, function(err, tx) {\r\n        if(!err && tx) {\r\n          ToastsStore.success('NFT를 획득했습니다!');\r\n          close();\r\n        } else {\r\n          ToastsStore.error('다시 시도해주세요');\r\n          close();\r\n        }\r\n      });\r\n    } catch {\r\n      ToastsStore.error('다시 시도해주세요');\r\n      close();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={modal} modalClassName=\"modal-black\">\r\n      <div className=\"modal-header\">\r\n        <p className=\"ml-3\">\r\n          { bal }\r\n\r\n          <img\r\n            alt=\"soul\"\r\n            className=\"img-fluid ml-1\"\r\n            width={16}\r\n            src=\"/img/1.png\"\r\n          />\r\n        </p>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-hidden=\"true\"\r\n          onClick={() => close()}\r\n        >\r\n          <i className=\"tim-icons icon-simple-remove\" />\r\n        </button>\r\n      </div>\r\n\r\n      <ModalBody>\r\n        <Row className=\"mt-5 mb-5\">\r\n          {\r\n            list.map((nft, idx) => (\r\n              <Col \r\n                lg=\"4\" \r\n                md=\"4\" \r\n                key={idx}\r\n                className=\"mb-3\"\r\n                onClick={() => setSelect(idx)}\r\n                style={{ border: itemStyle(idx) }}\r\n              >\r\n                <img\r\n                  alt=\"soul\"\r\n                  className=\"img-center img-fluid\"\r\n                  src={nft.imgUrl}\r\n                />\r\n              </Col>\r\n            ))\r\n          }\r\n        </Row>\r\n      </ModalBody>\r\n\r\n      <ModalFooter>\r\n        <Button color=\"secondary\" onClick={() => close()}>\r\n          닫기\r\n        </Button>\r\n\r\n        <Button\r\n          color=\"info\"\r\n          onClick={() => getNFT()}\r\n          disabled={select < 0 && bal == 0}\r\n        >\r\n          빙의\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport {\n  Button,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\" style={{ marginTop: '30vh' }}>\n      <Container>\n        <Row>\n          <Col md=\"3\">\n            <h1 className=\"title\">KAL</h1>\n          </Col>\n          <Col md=\"6\"></Col>\n          <Col md=\"3\" style={{ display: 'flex', alignItems: 'center' }}>\n            <div className=\"btn-wrapper profile\">\n              <Button\n                className=\"btn-icon btn-neutral btn-round btn-simple\"\n                color=\"default\"\n                href=\"https://twitter.com/klayafterlife\"\n                target=\"_blank\"\n              >\n                <i className=\"fab fa-twitter\" />\n              </Button>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n","import React, { useState } from \"react\";\r\n// import Caver from 'caver-js';\r\nimport { Button, Card, CardBody, Container, Row, Col } from \"reactstrap\";\r\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\r\n\r\nimport SoulModal from \"components/Modal/SoulModal.js\";\r\nimport NFTModal from \"components/Modal/NFTModal.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\n// import { KAL_ADDR, KAL_ABI } from '../../constant.js';\r\n\r\nexport default function Home() {\r\n  const [soulModal, setSoulModal] = useState(false);\r\n  const [nftModal, setNFTModal] = useState(false);\r\n\r\n  React.useEffect(() => {\r\n    document.body.classList.add(\"profile-page\");\r\n\r\n    const { klaytn } = window;\r\n    if(klaytn) {\r\n      klaytn.on('accountsChanged', () => {\r\n        if(soulModal || nftModal) {\r\n          setSoulModal(false);\r\n          setNFTModal(false);  \r\n        }\r\n      });\r\n      \r\n      klaytn.on('networkChanged', () => {\r\n        setSoulModal(false);\r\n        setNFTModal(false);\r\n      });\r\n    }\r\n  },[]);\r\n\r\n  const open = (type) => {\r\n    const { klaytn } = window;\r\n    if (!klaytn || !klaytn.isKaikas) {\r\n      errMsg('KAIKAS가 설치된 PC 브라우저에서만 가능합니다');\r\n      return;\r\n    }\r\n    if(klaytn.networkVersion !== 8217) {\r\n      errMsg('Cypress Main Network로 변경해주세요')\r\n      return;\r\n    }\r\n\r\n    klaytn.enable().then(() => {\r\n      if(type === 'soul') {\r\n        setSoulModal(true);\r\n      }\r\n      if(type === 'nft') {\r\n        setNFTModal(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  // const support = async () => {\r\n  //   const { klaytn } = window;\r\n  //   if (!klaytn || !klaytn.isKaikas) {\r\n  //     errMsg('KAIKAS가 설치된 PC 브라우저에서만 가능합니다');\r\n  //     return;\r\n  //   }\r\n  //   // if(klaytn.networkVersion !== 8217) {\r\n  //   //   errMsg('Cypress Main Network로 변경해주세요')\r\n  //   //   return;\r\n  //   // }\r\n\r\n  //   await klaytn.enable();\r\n\r\n  //   const caver = new Caver(klaytn);\r\n  //   const myContract = new caver.klay.Contract(\r\n  //     KAL_ABI,\r\n  //     KAL_ADDR\r\n  //   );\r\n    \r\n  //   try {\r\n  //     myContract.methods.addSupport()\r\n  //     .send({\r\n  //       from: klaytn.selectedAddress,\r\n  //       value: caver.utils.toPeb('0.05', 'KLAY'),\r\n  //       gas: 800000\r\n  //     }, function(err, tx) {\r\n  //       if(!err && tx) {\r\n  //         ToastsStore.success('후원자로 등록되었습니다!');\r\n  //       } else {\r\n  //         ToastsStore.error('다시 시도해주세요');\r\n  //       }\r\n  //     });\r\n  //   } catch {\r\n  //     ToastsStore.error('다시 시도해주세요');\r\n  //   }\r\n  // }\r\n\r\n  const errMsg = (msg) => {\r\n    ToastsStore.error(msg);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <div className=\"page-header\">\r\n          <Container className=\"align-items-center\">\r\n            <Row>\r\n              <Col lg=\"6\" md=\"6\">\r\n                <h1 className=\"profile-title text-left\">영혼 추출</h1>\r\n                <h5 className=\"text-on-back\">01</h5>\r\n                <p className=\"profile-description\">\r\n                  모든 삼라만상에는 영혼이 깃들어있습니다.<br />\r\n                  우리는 실험을 통해 일부 NFT에서 영혼을 분리하는 것에 성공했습니다.<br />\r\n                  이제 우리는 더 많은 실험체를 통해 더 많은 데이터를 얻고자 합니다. 우리의 실험에 동참해주세요.\r\n                </p>\r\n\r\n                <Button\r\n                  className=\"btn-simple mt-3\"\r\n                  color=\"success\"\r\n                  href=\"#pablo\"\r\n                  onClick={() => open('soul')}\r\n                >\r\n                  실험 참여\r\n                </Button>\r\n              </Col>\r\n              <Col className=\"ml-auto mr-auto mt-5 pt-5\" lg=\"4\" md=\"6\">\r\n                <Card className=\"card-plain mt-5\">\r\n                  <CardBody>\r\n                    <img\r\n                      alt=\"soul\"\r\n                      className=\"img-center img-fluid rounded-circle\"\r\n                      src=\"/img/1.png\"\r\n                    />\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n\r\n        <div className=\"section\">\r\n          <Container>\r\n            <Row className=\"justify-content-between\">\r\n              <Col md=\"6\">\r\n                <Row className=\"justify-content-between align-items-center mt-5 pt-5\">\r\n                  <img\r\n                    alt=\"soul\"\r\n                    className=\"img-center img-fluid\"\r\n                    src=\"/img/2.png\"\r\n                  />\r\n                </Row>\r\n              </Col>\r\n              <Col md=\"5\">\r\n                <h1 className=\"profile-title text-left\">빙의</h1>\r\n                <h5 className=\"text-on-back\">02</h5>\r\n                <p className=\"profile-description text-left\">\r\n                  우리는 영혼이 빠져나간 NFT를 보관합니다.<br />\r\n                  영혼 소유자는 보관 중인 NFT 중 하나에 빙의할 수 있습니다.\r\n                </p>\r\n                <div className=\"btn-wrapper pt-3\">\r\n                  <Button\r\n                    className=\"btn-simple\"\r\n                    color=\"info\"\r\n                    href=\"#pablo\"\r\n                    onClick={() => open('nft')}\r\n                  >\r\n                    들어가기\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n\r\n        {/* <section className=\"section\">\r\n          <Container>\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <Card className=\"card-plain\">\r\n                  <CardHeader>\r\n                    <h1 className=\"profile-title text-left\">기부</h1>\r\n                    <h5 className=\"text-on-back\">03</h5>\r\n                  </CardHeader>\r\n\r\n                  <CardBody>\r\n                    <p className=\"profile-description text-left\">\r\n                      우리의 연구 성과는 모두 무료로 제공됩니다.<br />\r\n                      우리는 더 많은 실험을 준비하고 있고 실험에는 많은 비용과 시간이 필요합니다.<br />\r\n                      우리가 더 많은 실험을 할 수 있게 도와주세요.\r\n                    </p>\r\n\r\n                    <div className=\"btn-wrapper pt-3\">\r\n                      <Button\r\n                        className=\"btn-simple\"\r\n                        color=\"warning\"\r\n                        href=\"#pablo\"\r\n                        onClick={() => support()}\r\n                      >\r\n                        50 KLAY 기부\r\n                      </Button>\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col className=\"ml-auto\" md=\"4\">\r\n                <div className=\"info info-horizontal\">\r\n                  <div className=\"icon icon-primary\">\r\n                    <i className=\"tim-icons icon-paper\" />\r\n                  </div>\r\n                  <div className=\"description\">\r\n                    <h4 className=\"info-title\">기부금 사용처</h4>\r\n                    <p>\r\n                      연구소 유지비<br />\r\n                      추가 실험 비용<br />\r\n                      영혼 공급\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"info info-horizontal\">\r\n                  <div className=\"icon icon-primary\">\r\n                    <i className=\"tim-icons icon-notes\" />\r\n                  </div>\r\n                  <div className=\"description\">\r\n                    <h4 className=\"info-title\">추가 실험 목록</h4>\r\n                    <p>\r\n                      백귀야행<br />\r\n                      후원자 혜택 1<br />\r\n                      후원자 혜택 2\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </section> */}\r\n\r\n        {/* <div className=\"section\">\r\n          <Container>\r\n            <Row>\r\n              <Col lg=\"6\" md=\"6\">\r\n                <h1 className=\"profile-title text-left\">백귀야행</h1>\r\n                <h5 className=\"text-on-back\">03</h5>\r\n                <p className=\"profile-description\">\r\n                  영혼이 된 귀신들의 축제.<br />\r\n                  산과 호수 중 선택하여 참여할 수 있습니다.<br />\r\n                  참여에는 하나의 영혼이 필요합니다.<br />\r\n                  둘 중 더 시끄러운 곳에 저승사자가 나타납니다.<br />\r\n                  살아남은 영혼은 2배로 커집니다.\r\n                </p>\r\n                <Button\r\n                  className=\"btn mt-3 mr-2\"\r\n                  color=\"success\"\r\n                  href=\"#pablo\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  산\r\n                </Button>\r\n                <Button\r\n                  className=\"btn mt-3\"\r\n                  color=\"info\"\r\n                  href=\"#pablo\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  호수\r\n                </Button>\r\n              </Col>\r\n              <Col className=\"ml-auto mr-auto mt-5\" lg=\"4\" md=\"6\">\r\n                <Card className=\"card-plain\">\r\n                  <CardBody>\r\n                    <img\r\n                      alt=\"soul\"\r\n                      className=\"img-center img-fluid mt-5 pt-3\"\r\n                      src=\"/img/3.png\"\r\n                    />\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div> */}\r\n\r\n        <Footer />\r\n\r\n        <SoulModal modal={soulModal} close={() => setSoulModal(false)} />\r\n        <NFTModal modal={nftModal} close={() => setNFTModal(false)} />\r\n        \r\n        <ToastsContainer \r\n          store={ToastsStore} \r\n          position={ToastsContainerPosition.BOTTOM_CENTER} \r\n          lightBackground\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport \"assets/css/nucleo-icons.css\";\r\nimport \"assets/scss/blk-design-system-react.scss?v=1.2.0\";\r\nimport \"assets/demo/demo.css\";\r\n\r\nimport Home from \"views/examples/Home.js\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Switch>\r\n      <Route\r\n        path=\"/\"\r\n        render={(props) => <Home {...props} />}\r\n      />\r\n    </Switch>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}